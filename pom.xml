<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.dfki.mlt.transins</groupId>
  <artifactId>transins</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>TransIns</name>
  <description>Translation of html, docx, etc. using the Okapi framework</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
    <junit.jupiter.version>5.6.2</junit.jupiter.version>
    <okapi.version>1.39.0</okapi.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.10</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.9</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-configuration2</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <!-- required for commons-configuration2 -->
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.4</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20200518</version>
    </dependency>

    <dependency>
      <!-- core Jetty server -->
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>9.4.36.v20210114</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <!-- Jetty servlet container -->
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>9.4.36.v20210114</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <!-- JAX-RS API -->
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>2.33</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <!-- Jersey Multipart entity providers support module -->
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>2.33</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <!-- HK2 InjectionManager implementation -->
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>2.33</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <!-- Java architecture for XML binding -->
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.1</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Okapi dependencies -->
    <dependency>
      <groupId>net.sf.okapi</groupId>
      <artifactId>okapi-core</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-common</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-leveraging</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <!-- segmentation -->
    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-segmentation</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <!-- connectors to translators -->
    <dependency>
      <groupId>net.sf.okapi.connectors</groupId>
      <artifactId>okapi-connector-microsoft</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.okapi.connectors</groupId>
      <artifactId>okapi-connector-apertium</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <!-- OpenXML filter -->
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-openxml</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <!-- OpenOffice filter -->
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-openoffice</artifactId>
      <version>${okapi.version}</version>
    </dependency>
    <!-- HTML filters -->
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-html</artifactId>
      <version>${okapi.version}</version>
    </dependency>

    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-properties</artifactId>
      <version>${okapi.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- okf_xml filter -->
    <dependency>
      <groupId>net.sf.okapi.filters</groupId>
      <artifactId>okapi-filter-its</artifactId>
      <version>${okapi.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- amaGama TM for Translate-Toolkit -->
    <dependency>
      <groupId>net.sf.okapi.connectors</groupId>
      <artifactId>okapi-connector-translatetoolkit</artifactId>
      <version>${okapi.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.16.1</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
